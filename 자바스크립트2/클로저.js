let user; // 변수선언
//블락을 따로 정의하면 블락내에서만 존재한다.
//블락안에 객체가 선언되며
//객체참조변수는 스택에 존재 --> 객체 자체는 힙공간에 존재한다.
//privateUser - 블럭안에서만 존재하는 상수이다.
//  {"name":'홍길동', "age":23}; 객체자체는 힙에 있고.
// 블락을따로 정의하면 블락내에서만 존재한다.
{
  const privateUser = {"name":'홍길동', "age":23};
  console.log(privateUser)
  user= privateUser; // 참조를 외부 변수에게 맡긴다. 이렇게 되면 블락이 끝나도 쓰레기가 발생하지 않고 가지고 있게됨.
}

//privateUser 랑 user랑 똑같이 메모리 공간을 차지한다.
// 블락이 종료하면 privateUser가 사라지기 때문에 GC(garbage collector)라는 애가 메모리가 부족한 상황이 오면
//  {"name":'홍길동', "age":23} 이 메모리를 해제하려고 준비중인데.
// user에 참조가 아직 남아 있다.라고 인식해 삭제하면 안되는 구나 생각함.
